<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Reminders.Core.Controls"
    xmlns:converters="clr-namespace:Reminders.Core.Converters"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes">

    <converters:WindowTitleIconVisibilityConverter x:Key="windowTitleIconVisibilityConverter" />

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="32" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="8,0,8,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="border"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{StaticResource PrimaryHueMidBrush}"
                            Opacity="0" />
                        <AdornerDecorator>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </AdornerDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="0.9" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="WindowMinimizeButtonStyle"
        BasedOn="{StaticResource WindowButtonStyle}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" Value="NoResize">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" Value="CanMinimize">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" Value="CanResize">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" Value="CanResizeWithGrip">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="WindowMaximizeRestoreButtonStyle"
        BasedOn="{StaticResource WindowButtonStyle}"
        TargetType="{x:Type Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" Value="NoResize">
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" Value="CanMinimize">
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" Value="CanResize">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ResizeMode, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" Value="CanResizeWithGrip">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="WindowCloseButtonStyle"
        BasedOn="{StaticResource WindowButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="IsEnabled" Value="True" />
    </Style>

    <Style x:Key="WindowButtonIconStyle" TargetType="{x:Type md:PackIcon}">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Foreground" Value="{Binding Path=MaterialForegroundBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" />
    </Style>

    <Style x:Key="WindowTitleTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{Binding Path=MaterialForegroundBrush, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="WindowIconStyle" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="8,0,8,0" />
    </Style>

    <Style x:Key="MaterialWindowStyle" TargetType="{x:Type controls:MaterialWindow}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
        <Setter Property="MaterialBackgroundBrush" Value="{StaticResource PrimaryHueDarkBrush}" />
        <Setter Property="MinWidth" Value="560" />
        <Setter Property="MinHeight" Value="380" />
        <Setter Property="MaterialForegroundBrush" Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
        <Setter Property="TitleIcon" Value="{Binding Path=Icon, RelativeSource={RelativeSource Self}}" />
        <Setter Property="FontFamily" Value="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" />
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Margin="8,0,0,0"
                        Style="{StaticResource WindowTitleTextBlockStyle}"
                        Text="{Binding Path=Title, RelativeSource={RelativeSource AncestorType={x:Type controls:MaterialWindow}}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MaterialWindow}">
                    <Border>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Normal">
                                        <Setter Property="Padding" Value="0" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource TemplatedParent}}" Value="Maximized">
                                        <Setter Property="Padding" Value="8" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Border
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <!--  1st row  -->
                                <md:ColorZone
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Mode="PrimaryDark">
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Image
                                            Source="{TemplateBinding TitleIcon}"
                                            Style="{StaticResource WindowIconStyle}"
                                            Visibility="{TemplateBinding TitleIcon,
                                                                         Converter={StaticResource windowTitleIconVisibilityConverter}}" />

                                        <Border
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch">
                                            <ContentControl
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                ContentTemplate="{TemplateBinding TitleTemplate}" />
                                        </Border>

                                        <!--  window buttons  -->
                                        <StackPanel
                                            Grid.Column="2"
                                            VerticalAlignment="Stretch"
                                            Orientation="Horizontal">

                                            <Button x:Name="minimizeButton" Style="{StaticResource WindowMinimizeButtonStyle}">
                                                <md:PackIcon Kind="WindowMinimize" Style="{StaticResource WindowButtonIconStyle}" />
                                            </Button>

                                            <Button x:Name="maximizeRestoreButton" Style="{StaticResource WindowMaximizeRestoreButtonStyle}">
                                                <md:PackIcon Kind="WindowMaximize" Style="{StaticResource WindowButtonIconStyle}" />
                                            </Button>

                                            <Button x:Name="closeButton" Style="{StaticResource WindowCloseButtonStyle}">
                                                <md:PackIcon Kind="WindowClose" Style="{StaticResource WindowButtonIconStyle}" />
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </md:ColorZone>

                                <!--  2st row  -->
                                <!--  window content  -->
                                <AdornerDecorator
                                    Grid.Row="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch">
                                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                </AdornerDecorator>
                            </Grid>
                        </Border>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome
                            CaptionHeight="32"
                            ResizeBorderThickness="4"
                            UseAeroCaptionButtons="False" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome
                            CaptionHeight="32"
                            ResizeBorderThickness="0"
                            UseAeroCaptionButtons="False" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome
                            CaptionHeight="32"
                            ResizeBorderThickness="4,4,18,18"
                            UseAeroCaptionButtons="False" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>